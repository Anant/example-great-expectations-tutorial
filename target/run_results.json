{"results": [{"node": {"raw_sql": "", "database": "demo_db", "schema": "public", "fqn": ["demo_pipeline", "HEALTHCARE_PROVIDER_TAXONOMY"], "unique_id": "seed.demo_pipeline.HEALTHCARE_PROVIDER_TAXONOMY", "package_name": "demo_pipeline", "root_path": "/Users/sam/code/demo_pipeline", "path": "HEALTHCARE_PROVIDER_TAXONOMY.csv", "original_file_path": "data/HEALTHCARE_PROVIDER_TAXONOMY.csv", "name": "HEALTHCARE_PROVIDER_TAXONOMY", "resource_type": "seed", "alias": "HEALTHCARE_PROVIDER_TAXONOMY", "config": {"enabled": true, "materialized": "seed", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "tags": []}, "tags": [], "refs": [], "sources": [], "depends_on": {"nodes": [], "macros": []}, "docrefs": [], "description": "", "columns": {}, "patch_path": null, "build_path": null, "compiled": true, "compiled_sql": "", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "", "wrapped_sql": "None", "seed_file_path": "/Users/sam/code/demo_pipeline/data/HEALTHCARE_PROVIDER_TAXONOMY.csv"}, "error": null, "status": null, "execution_time": 0.014250040054321289, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2020-02-05T15:26:25.196336Z", "completed_at": "2020-02-05T15:26:25.208859Z"}, {"name": "execute", "started_at": "2020-02-05T15:26:25.209348Z", "completed_at": "2020-02-05T15:26:25.209392Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "", "database": "demo_db", "schema": "public", "fqn": ["demo_pipeline", "abbr-name-list"], "unique_id": "seed.demo_pipeline.abbr-name-list", "package_name": "demo_pipeline", "root_path": "/Users/sam/code/demo_pipeline", "path": "abbr-name-list.csv", "original_file_path": "data/abbr-name-list.csv", "name": "abbr-name-list", "resource_type": "seed", "alias": "abbr-name-list", "config": {"enabled": true, "materialized": "seed", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "tags": []}, "tags": [], "refs": [], "sources": [], "depends_on": {"nodes": [], "macros": []}, "docrefs": [], "description": "", "columns": {}, "patch_path": null, "build_path": null, "compiled": true, "compiled_sql": "", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "", "wrapped_sql": "None", "seed_file_path": "/Users/sam/code/demo_pipeline/data/abbr-name-list.csv"}, "error": null, "status": null, "execution_time": 0.00648808479309082, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2020-02-05T15:26:25.211054Z", "completed_at": "2020-02-05T15:26:25.216152Z"}, {"name": "execute", "started_at": "2020-02-05T15:26:25.216720Z", "completed_at": "2020-02-05T15:26:25.216728Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "", "database": "demo_db", "schema": "public", "fqn": ["demo_pipeline", "npi_small_2019"], "unique_id": "seed.demo_pipeline.npi_small_2019", "package_name": "demo_pipeline", "root_path": "/Users/sam/code/demo_pipeline", "path": "npi_small_2019.csv", "original_file_path": "data/npi_small_2019.csv", "name": "npi_small_2019", "resource_type": "seed", "alias": "npi_small_2019", "config": {"enabled": true, "materialized": "seed", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "tags": []}, "tags": [], "refs": [], "sources": [], "depends_on": {"nodes": [], "macros": []}, "docrefs": [], "description": "", "columns": {}, "patch_path": null, "build_path": null, "compiled": true, "compiled_sql": "", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "", "wrapped_sql": "None", "seed_file_path": "/Users/sam/code/demo_pipeline/data/npi_small_2019.csv"}, "error": null, "status": null, "execution_time": 0.006454944610595703, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2020-02-05T15:26:25.218339Z", "completed_at": "2020-02-05T15:26:25.223542Z"}, {"name": "execute", "started_at": "2020-02-05T15:26:25.223842Z", "completed_at": "2020-02-05T15:26:25.223849Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "/*\n    Welcome to your first dbt model!\n    Did you know that you can also configure models directly within SQL files?\n    This will override configurations stated in dbt_project.yml\n\n    Try changing \"table\" to \"view\" below\n*/\n\n{{ config(materialized='table') }}\n\nwith source_data as (\n\n    select 1 as id\n    union all\n    select null as id\n\n)\n\nselect *\nfrom source_data\n\n/*\n    Uncomment the line below to remove records with null `id` values\n*/\n\n-- where id is not null", "database": "demo_db", "schema": "public", "fqn": ["demo_pipeline", "example", "my_first_dbt_model"], "unique_id": "model.demo_pipeline.my_first_dbt_model", "package_name": "demo_pipeline", "root_path": "/Users/sam/code/demo_pipeline", "path": "example/my_first_dbt_model.sql", "original_file_path": "models/example/my_first_dbt_model.sql", "name": "my_first_dbt_model", "resource_type": "model", "alias": "my_first_dbt_model", "config": {"enabled": true, "materialized": "table", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "tags": []}, "tags": [], "refs": [], "sources": [], "depends_on": {"nodes": [], "macros": []}, "docrefs": [], "description": "A starter dbt model", "columns": {"id": {"name": "id", "description": "The primary key for this table", "data_type": null}}, "patch_path": "models/example/schema.yml", "build_path": "target/compiled/demo_pipeline/example/my_first_dbt_model.sql", "compiled": true, "compiled_sql": "/*\n    Welcome to your first dbt model!\n    Did you know that you can also configure models directly within SQL files?\n    This will override configurations stated in dbt_project.yml\n\n    Try changing \"table\" to \"view\" below\n*/\n\n\n\nwith source_data as (\n\n    select 1 as id\n    union all\n    select null as id\n\n)\n\nselect *\nfrom source_data\n\n/*\n    Uncomment the line below to remove records with null `id` values\n*/\n\n-- where id is not null", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "/*\n    Welcome to your first dbt model!\n    Did you know that you can also configure models directly within SQL files?\n    This will override configurations stated in dbt_project.yml\n\n    Try changing \"table\" to \"view\" below\n*/\n\n\n\nwith source_data as (\n\n    select 1 as id\n    union all\n    select null as id\n\n)\n\nselect *\nfrom source_data\n\n/*\n    Uncomment the line below to remove records with null `id` values\n*/\n\n-- where id is not null", "wrapped_sql": "None"}, "error": null, "status": null, "execution_time": 0.017033100128173828, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2020-02-05T15:26:25.225022Z", "completed_at": "2020-02-05T15:26:25.240478Z"}, {"name": "execute", "started_at": "2020-02-05T15:26:25.241024Z", "completed_at": "2020-02-05T15:26:25.241041Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "select \n\t*\nfrom {{ ref('HEALTHCARE_PROVIDER_TAXONOMY') }}", "database": "demo_db", "schema": "public", "fqn": ["demo_pipeline", "staging", "stg_taxonomy"], "unique_id": "model.demo_pipeline.stg_taxonomy", "package_name": "demo_pipeline", "root_path": "/Users/sam/code/demo_pipeline", "path": "staging/stg_taxonomy.sql", "original_file_path": "models/staging/stg_taxonomy.sql", "name": "stg_taxonomy", "resource_type": "model", "alias": "stg_taxonomy", "config": {"enabled": true, "materialized": "view", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "tags": []}, "tags": [], "refs": [["HEALTHCARE_PROVIDER_TAXONOMY"]], "sources": [], "depends_on": {"nodes": ["seed.demo_pipeline.HEALTHCARE_PROVIDER_TAXONOMY"], "macros": []}, "docrefs": [], "description": "", "columns": {}, "patch_path": null, "build_path": "target/compiled/demo_pipeline/staging/stg_taxonomy.sql", "compiled": true, "compiled_sql": "select \n\t*\nfrom \"demo_db\".\"public\".\"HEALTHCARE_PROVIDER_TAXONOMY\"", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "select \n\t*\nfrom \"demo_db\".\"public\".\"HEALTHCARE_PROVIDER_TAXONOMY\"", "wrapped_sql": "None"}, "error": null, "status": null, "execution_time": 0.009547710418701172, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2020-02-05T15:26:25.243514Z", "completed_at": "2020-02-05T15:26:25.250637Z"}, {"name": "execute", "started_at": "2020-02-05T15:26:25.251142Z", "completed_at": "2020-02-05T15:26:25.251154Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "select \n\tname as state,\n\tabbreviation as state_abbrev\nfrom {{ ref('abbr-name-list') }}", "database": "demo_db", "schema": "public", "fqn": ["demo_pipeline", "staging", "stg_state_crosswalk"], "unique_id": "model.demo_pipeline.stg_state_crosswalk", "package_name": "demo_pipeline", "root_path": "/Users/sam/code/demo_pipeline", "path": "staging/stg_state_crosswalk.sql", "original_file_path": "models/staging/stg_state_crosswalk.sql", "name": "stg_state_crosswalk", "resource_type": "model", "alias": "stg_state_crosswalk", "config": {"enabled": true, "materialized": "view", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "tags": []}, "tags": [], "refs": [["abbr-name-list"]], "sources": [], "depends_on": {"nodes": ["seed.demo_pipeline.abbr-name-list"], "macros": []}, "docrefs": [], "description": "", "columns": {}, "patch_path": null, "build_path": "target/compiled/demo_pipeline/staging/stg_state_crosswalk.sql", "compiled": true, "compiled_sql": "select \n\tname as state,\n\tabbreviation as state_abbrev\nfrom \"demo_db\".\"public\".\"abbr-name-list\"", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "select \n\tname as state,\n\tabbreviation as state_abbrev\nfrom \"demo_db\".\"public\".\"abbr-name-list\"", "wrapped_sql": "None"}, "error": null, "status": null, "execution_time": 0.006918191909790039, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2020-02-05T15:26:25.252318Z", "completed_at": "2020-02-05T15:26:25.258287Z"}, {"name": "execute", "started_at": "2020-02-05T15:26:25.258512Z", "completed_at": "2020-02-05T15:26:25.258519Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "select \n\t*\nfrom {{ ref('npi_small_2019') }}", "database": "demo_db", "schema": "public", "fqn": ["demo_pipeline", "staging", "stg_npi"], "unique_id": "model.demo_pipeline.stg_npi", "package_name": "demo_pipeline", "root_path": "/Users/sam/code/demo_pipeline", "path": "staging/stg_npi.sql", "original_file_path": "models/staging/stg_npi.sql", "name": "stg_npi", "resource_type": "model", "alias": "stg_npi", "config": {"enabled": true, "materialized": "view", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "tags": []}, "tags": [], "refs": [["npi_small_2019"]], "sources": [], "depends_on": {"nodes": ["seed.demo_pipeline.npi_small_2019"], "macros": []}, "docrefs": [], "description": "", "columns": {}, "patch_path": null, "build_path": "target/compiled/demo_pipeline/staging/stg_npi.sql", "compiled": true, "compiled_sql": "select \n\t*\nfrom \"demo_db\".\"public\".\"npi_small_2019\"", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "select \n\t*\nfrom \"demo_db\".\"public\".\"npi_small_2019\"", "wrapped_sql": "None"}, "error": null, "status": null, "execution_time": 0.010601997375488281, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2020-02-05T15:26:25.259694Z", "completed_at": "2020-02-05T15:26:25.268775Z"}, {"name": "execute", "started_at": "2020-02-05T15:26:25.269424Z", "completed_at": "2020-02-05T15:26:25.269434Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "-- Use the `ref` function to select from other models\n\nselect *\nfrom {{ ref('my_first_dbt_model') }}\nwhere id = 1", "database": "demo_db", "schema": "public", "fqn": ["demo_pipeline", "example", "my_second_dbt_model"], "unique_id": "model.demo_pipeline.my_second_dbt_model", "package_name": "demo_pipeline", "root_path": "/Users/sam/code/demo_pipeline", "path": "example/my_second_dbt_model.sql", "original_file_path": "models/example/my_second_dbt_model.sql", "name": "my_second_dbt_model", "resource_type": "model", "alias": "my_second_dbt_model", "config": {"enabled": true, "materialized": "view", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "tags": []}, "tags": [], "refs": [["my_first_dbt_model"]], "sources": [], "depends_on": {"nodes": ["model.demo_pipeline.my_first_dbt_model"], "macros": []}, "docrefs": [], "description": "A starter dbt model", "columns": {"id": {"name": "id", "description": "The primary key for this table", "data_type": null}}, "patch_path": "models/example/schema.yml", "build_path": "target/compiled/demo_pipeline/example/my_second_dbt_model.sql", "compiled": true, "compiled_sql": "-- Use the `ref` function to select from other models\n\nselect *\nfrom \"demo_db\".\"public\".\"my_first_dbt_model\"\nwhere id = 1", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "-- Use the `ref` function to select from other models\n\nselect *\nfrom \"demo_db\".\"public\".\"my_first_dbt_model\"\nwhere id = 1", "wrapped_sql": "None"}, "error": null, "status": null, "execution_time": 0.007874011993408203, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2020-02-05T15:26:25.270754Z", "completed_at": "2020-02-05T15:26:25.277479Z"}, {"name": "execute", "started_at": "2020-02-05T15:26:25.277700Z", "completed_at": "2020-02-05T15:26:25.277708Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "{{ config(severity='ERROR') }}{{ test_not_null(model=ref('my_first_dbt_model'), column_name='id') }}", "database": "demo_db", "schema": "public", "fqn": ["demo_pipeline", "schema_test", "not_null_my_first_dbt_model_id"], "unique_id": "test.demo_pipeline.not_null_my_first_dbt_model_id", "package_name": "demo_pipeline", "root_path": "/Users/sam/code/demo_pipeline", "path": "schema_test/not_null_my_first_dbt_model_id.sql", "original_file_path": "models/example/schema.yml", "name": "not_null_my_first_dbt_model_id", "resource_type": "test", "alias": "not_null_my_first_dbt_model_id", "config": {"enabled": true, "materialized": "view", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "tags": [], "severity": "ERROR"}, "tags": ["schema"], "refs": [["my_first_dbt_model"]], "sources": [], "depends_on": {"nodes": ["model.demo_pipeline.my_first_dbt_model"], "macros": []}, "docrefs": [], "description": "", "columns": {}, "patch_path": null, "build_path": "target/compiled/demo_pipeline/schema_test/not_null_my_first_dbt_model_id.sql", "compiled": true, "compiled_sql": "\n\n\n\nselect count(*)\nfrom \"demo_db\".\"public\".\"my_first_dbt_model\"\nwhere id is null\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\nselect count(*)\nfrom \"demo_db\".\"public\".\"my_first_dbt_model\"\nwhere id is null\n\n", "wrapped_sql": "\n\n\n\nselect count(*)\nfrom \"demo_db\".\"public\".\"my_first_dbt_model\"\nwhere id is null\n", "column_name": "id", "test_metadata": {"namespace": null, "name": "not_null", "kwargs": {"column_name": "id"}}}, "error": null, "status": null, "execution_time": 0.015386819839477539, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2020-02-05T15:26:25.278911Z", "completed_at": "2020-02-05T15:26:25.293237Z"}, {"name": "execute", "started_at": "2020-02-05T15:26:25.293514Z", "completed_at": "2020-02-05T15:26:25.293521Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "{{ config(severity='ERROR') }}{{ test_unique(model=ref('my_first_dbt_model'), column_name='id') }}", "database": "demo_db", "schema": "public", "fqn": ["demo_pipeline", "schema_test", "unique_my_first_dbt_model_id"], "unique_id": "test.demo_pipeline.unique_my_first_dbt_model_id", "package_name": "demo_pipeline", "root_path": "/Users/sam/code/demo_pipeline", "path": "schema_test/unique_my_first_dbt_model_id.sql", "original_file_path": "models/example/schema.yml", "name": "unique_my_first_dbt_model_id", "resource_type": "test", "alias": "unique_my_first_dbt_model_id", "config": {"enabled": true, "materialized": "view", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "tags": [], "severity": "ERROR"}, "tags": ["schema"], "refs": [["my_first_dbt_model"]], "sources": [], "depends_on": {"nodes": ["model.demo_pipeline.my_first_dbt_model"], "macros": []}, "docrefs": [], "description": "", "columns": {}, "patch_path": null, "build_path": "target/compiled/demo_pipeline/schema_test/unique_my_first_dbt_model_id.sql", "compiled": true, "compiled_sql": "\n\n\n\nselect count(*)\nfrom (\n\n    select\n        id\n\n    from \"demo_db\".\"public\".\"my_first_dbt_model\"\n    where id is not null\n    group by id\n    having count(*) > 1\n\n) validation_errors\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\nselect count(*)\nfrom (\n\n    select\n        id\n\n    from \"demo_db\".\"public\".\"my_first_dbt_model\"\n    where id is not null\n    group by id\n    having count(*) > 1\n\n) validation_errors\n\n", "wrapped_sql": "\n\n\n\nselect count(*)\nfrom (\n\n    select\n        id\n\n    from \"demo_db\".\"public\".\"my_first_dbt_model\"\n    where id is not null\n    group by id\n    having count(*) > 1\n\n) validation_errors\n", "column_name": "id", "test_metadata": {"namespace": null, "name": "unique", "kwargs": {"column_name": "id"}}}, "error": null, "status": null, "execution_time": 0.010486841201782227, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2020-02-05T15:26:25.294610Z", "completed_at": "2020-02-05T15:26:25.303613Z"}, {"name": "execute", "started_at": "2020-02-05T15:26:25.303993Z", "completed_at": "2020-02-05T15:26:25.304000Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "select \n\tn.*,\n\tt.provider_taxonomy_description,\n\ts.state as state_name\nfrom {{ ref('stg_npi') }} n\nleft join {{ ref('stg_taxonomy') }} t\n\ton n.taxonomy_code = t.provider_taxonomy_code\nleft join {{ ref('stg_state_crosswalk') }} s\n\ton n.state = s.state_abbrev", "database": "demo_db", "schema": "public", "fqn": ["demo_pipeline", "npi_with_crosswalks"], "unique_id": "model.demo_pipeline.npi_with_crosswalks", "package_name": "demo_pipeline", "root_path": "/Users/sam/code/demo_pipeline", "path": "npi_with_crosswalks.sql", "original_file_path": "models/npi_with_crosswalks.sql", "name": "npi_with_crosswalks", "resource_type": "model", "alias": "npi_with_crosswalks", "config": {"enabled": true, "materialized": "view", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "tags": []}, "tags": [], "refs": [["stg_npi"], ["stg_taxonomy"], ["stg_state_crosswalk"]], "sources": [], "depends_on": {"nodes": ["model.demo_pipeline.stg_npi", "model.demo_pipeline.stg_taxonomy", "model.demo_pipeline.stg_state_crosswalk"], "macros": []}, "docrefs": [], "description": "", "columns": {}, "patch_path": null, "build_path": "target/compiled/demo_pipeline/npi_with_crosswalks.sql", "compiled": true, "compiled_sql": "select \n\tn.*,\n\tt.provider_taxonomy_description,\n\ts.state as state_name\nfrom \"demo_db\".\"public\".\"stg_npi\" n\nleft join \"demo_db\".\"public\".\"stg_taxonomy\" t\n\ton n.taxonomy_code = t.provider_taxonomy_code\nleft join \"demo_db\".\"public\".\"stg_state_crosswalk\" s\n\ton n.state = s.state_abbrev", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "select \n\tn.*,\n\tt.provider_taxonomy_description,\n\ts.state as state_name\nfrom \"demo_db\".\"public\".\"stg_npi\" n\nleft join \"demo_db\".\"public\".\"stg_taxonomy\" t\n\ton n.taxonomy_code = t.provider_taxonomy_code\nleft join \"demo_db\".\"public\".\"stg_state_crosswalk\" s\n\ton n.state = s.state_abbrev", "wrapped_sql": "None"}, "error": null, "status": null, "execution_time": 0.012765169143676758, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2020-02-05T15:26:25.306299Z", "completed_at": "2020-02-05T15:26:25.316881Z"}, {"name": "execute", "started_at": "2020-02-05T15:26:25.317391Z", "completed_at": "2020-02-05T15:26:25.317400Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "{{ config(severity='ERROR') }}{{ test_not_null(model=ref('my_second_dbt_model'), column_name='id') }}", "database": "demo_db", "schema": "public", "fqn": ["demo_pipeline", "schema_test", "not_null_my_second_dbt_model_id"], "unique_id": "test.demo_pipeline.not_null_my_second_dbt_model_id", "package_name": "demo_pipeline", "root_path": "/Users/sam/code/demo_pipeline", "path": "schema_test/not_null_my_second_dbt_model_id.sql", "original_file_path": "models/example/schema.yml", "name": "not_null_my_second_dbt_model_id", "resource_type": "test", "alias": "not_null_my_second_dbt_model_id", "config": {"enabled": true, "materialized": "view", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "tags": [], "severity": "ERROR"}, "tags": ["schema"], "refs": [["my_second_dbt_model"]], "sources": [], "depends_on": {"nodes": ["model.demo_pipeline.my_second_dbt_model"], "macros": []}, "docrefs": [], "description": "", "columns": {}, "patch_path": null, "build_path": "target/compiled/demo_pipeline/schema_test/not_null_my_second_dbt_model_id.sql", "compiled": true, "compiled_sql": "\n\n\n\nselect count(*)\nfrom \"demo_db\".\"public\".\"my_second_dbt_model\"\nwhere id is null\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\nselect count(*)\nfrom \"demo_db\".\"public\".\"my_second_dbt_model\"\nwhere id is null\n\n", "wrapped_sql": "\n\n\n\nselect count(*)\nfrom \"demo_db\".\"public\".\"my_second_dbt_model\"\nwhere id is null\n", "column_name": "id", "test_metadata": {"namespace": null, "name": "not_null", "kwargs": {"column_name": "id"}}}, "error": null, "status": null, "execution_time": 0.010818004608154297, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2020-02-05T15:26:25.318827Z", "completed_at": "2020-02-05T15:26:25.328509Z"}, {"name": "execute", "started_at": "2020-02-05T15:26:25.328949Z", "completed_at": "2020-02-05T15:26:25.328957Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "{{ config(severity='ERROR') }}{{ test_unique(model=ref('my_second_dbt_model'), column_name='id') }}", "database": "demo_db", "schema": "public", "fqn": ["demo_pipeline", "schema_test", "unique_my_second_dbt_model_id"], "unique_id": "test.demo_pipeline.unique_my_second_dbt_model_id", "package_name": "demo_pipeline", "root_path": "/Users/sam/code/demo_pipeline", "path": "schema_test/unique_my_second_dbt_model_id.sql", "original_file_path": "models/example/schema.yml", "name": "unique_my_second_dbt_model_id", "resource_type": "test", "alias": "unique_my_second_dbt_model_id", "config": {"enabled": true, "materialized": "view", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "tags": [], "severity": "ERROR"}, "tags": ["schema"], "refs": [["my_second_dbt_model"]], "sources": [], "depends_on": {"nodes": ["model.demo_pipeline.my_second_dbt_model"], "macros": []}, "docrefs": [], "description": "", "columns": {}, "patch_path": null, "build_path": "target/compiled/demo_pipeline/schema_test/unique_my_second_dbt_model_id.sql", "compiled": true, "compiled_sql": "\n\n\n\nselect count(*)\nfrom (\n\n    select\n        id\n\n    from \"demo_db\".\"public\".\"my_second_dbt_model\"\n    where id is not null\n    group by id\n    having count(*) > 1\n\n) validation_errors\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\nselect count(*)\nfrom (\n\n    select\n        id\n\n    from \"demo_db\".\"public\".\"my_second_dbt_model\"\n    where id is not null\n    group by id\n    having count(*) > 1\n\n) validation_errors\n\n", "wrapped_sql": "\n\n\n\nselect count(*)\nfrom (\n\n    select\n        id\n\n    from \"demo_db\".\"public\".\"my_second_dbt_model\"\n    where id is not null\n    group by id\n    having count(*) > 1\n\n) validation_errors\n", "column_name": "id", "test_metadata": {"namespace": null, "name": "unique", "kwargs": {"column_name": "id"}}}, "error": null, "status": null, "execution_time": 0.008671045303344727, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2020-02-05T15:26:25.329872Z", "completed_at": "2020-02-05T15:26:25.337639Z"}, {"name": "execute", "started_at": "2020-02-05T15:26:25.337931Z", "completed_at": "2020-02-05T15:26:25.337937Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "select \n\tprovider_taxonomy_description,\n\tstate_name,\n\tcount(distinct npi)\nfrom {{ ref('npi_with_crosswalks') }} n\ngroup by 1, 2", "database": "demo_db", "schema": "public", "fqn": ["demo_pipeline", "count_specialties"], "unique_id": "model.demo_pipeline.count_specialties", "package_name": "demo_pipeline", "root_path": "/Users/sam/code/demo_pipeline", "path": "count_specialties.sql", "original_file_path": "models/count_specialties.sql", "name": "count_specialties", "resource_type": "model", "alias": "count_specialties", "config": {"enabled": true, "materialized": "view", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "tags": []}, "tags": [], "refs": [["npi_with_crosswalks"]], "sources": [], "depends_on": {"nodes": ["model.demo_pipeline.npi_with_crosswalks"], "macros": []}, "docrefs": [], "description": "", "columns": {}, "patch_path": null, "build_path": "target/compiled/demo_pipeline/count_specialties.sql", "compiled": true, "compiled_sql": "select \n\tprovider_taxonomy_description,\n\tstate_name,\n\tcount(distinct npi)\nfrom \"demo_db\".\"public\".\"npi_with_crosswalks\" n\ngroup by 1, 2", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "select \n\tprovider_taxonomy_description,\n\tstate_name,\n\tcount(distinct npi)\nfrom \"demo_db\".\"public\".\"npi_with_crosswalks\" n\ngroup by 1, 2", "wrapped_sql": "None"}, "error": null, "status": null, "execution_time": 0.008301973342895508, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2020-02-05T15:26:25.339021Z", "completed_at": "2020-02-05T15:26:25.345798Z"}, {"name": "execute", "started_at": "2020-02-05T15:26:25.346335Z", "completed_at": "2020-02-05T15:26:25.346346Z"}], "fail": null, "warn": null, "skip": false}], "generated_at": "2020-02-05T15:26:25.409069Z", "elapsed_time": 0.21488189697265625}